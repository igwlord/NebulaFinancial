/**
 * üßπ NEBULA FINANCIAL - SCRIPT DE LIMPIEZA PARA PRODUCCI√ìN
 * ========================================================
 * Script para preparar la aplicaci√≥n para producci√≥n:
 * - Eliminar console.log de depuraci√≥n
 * - Minificar archivos (opcional)
 * - Generar build local de Tailwind (opcional)
 */

const fs = require('fs');
const path = require('path');

// Archivos a limpiar
const filesToClean = [
    '../js/auth.js',
    '../js/app.js',
    '../js/components/notifications.js',
    '../js/components/shortcuts.js',
    '../js/components/modals.js'
];

/**
 * Reemplaza console.log con comentarios para producci√≥n
 */
function cleanDebugLogs(filePath) {
    try {
        const fullPath = path.join(__dirname, filePath);
        let content = fs.readFileSync(fullPath, 'utf8');
        
        // Reemplazar console.log con comentarios
        content = content.replace(/console\.log\(.*?\);?/g, (match) => {
            return `// DEBUG: ${match}`;
        });
        
        // Crear archivo de producci√≥n
        const prodPath = fullPath.replace('.js', '.prod.js');
        fs.writeFileSync(prodPath, content);
        
        console.log(`‚úÖ Limpieza completada: ${prodPath}`);
        
    } catch (error) {
        console.error(`‚ùå Error procesando ${filePath}:`, error.message);
    }
}

/**
 * Ejecutar limpieza para todos los archivos
 */
function runCleanup() {
    console.log('üßπ INICIANDO LIMPIEZA PARA PRODUCCI√ìN');
    console.log('=====================================');
    
    filesToClean.forEach(cleanDebugLogs);
    
    console.log('\n‚úÖ LIMPIEZA COMPLETADA');
    console.log('Los archivos .prod.js est√°n listos para producci√≥n');
    console.log('\nüìù PASOS ADICIONALES RECOMENDADOS:');
    console.log('1. Reemplazar CDN de Tailwind con build local');
    console.log('2. Configurar minificaci√≥n de archivos');
    console.log('3. Optimizar im√°genes y assets');
    console.log('4. Configurar compresi√≥n gzip en servidor');
}

// Ejecutar si se llama directamente
if (require.main === module) {
    runCleanup();
}

module.exports = { cleanDebugLogs, runCleanup };
